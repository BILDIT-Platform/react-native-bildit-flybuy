(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[525],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return u},kt:function(){return y}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=r.createContext({}),a=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},u=function(e){var n=a(e.components);return r.createElement(i.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,s=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=a(t),y=o,m=d["".concat(i,".").concat(y)]||d[y]||p[y]||s;return t?r.createElement(m,c(c({ref:n},u),{},{components:t})):r.createElement(m,c({ref:n},u))}));function y(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var s=t.length,c=new Array(s);c[0]=d;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l.mdxType="string"==typeof e?e:o,c[1]=l;for(var a=2;a<s;a++)c[a]=t[a];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5147:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return c},metadata:function(){return l},toc:function(){return i},default:function(){return u}});var r=t(2122),o=t(9756),s=(t(7294),t(3905)),c={},l={unversionedId:"Example App/App",id:"Example App/App",isDocsHomePage:!1,title:"App.tsx",description:"`jsx",source:"@site/docs/Example App/App.md",sourceDirName:"Example App",slug:"/Example App/App",permalink:"/docs/Example App/App",editUrl:"https://github.com/bildit-llc/react-native-bildit-flybuy/edit/main/website/docs/Example App/App.md",version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Sites",permalink:"/docs/Components/Sites"},next:{title:"Button.tsx",permalink:"/docs/Example App/Button"}},i=[],a={toc:i};function u(e){var n=e.components,t=(0,o.Z)(e,["components"]);return(0,s.kt)("wrapper",(0,r.Z)({},a,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},"import * as React from 'react';\n\nimport { StyleSheet, View, Text, ScrollView } from 'react-native';\nimport Button from './Button';\nimport Flybuy, { ISite } from 'react-native-bildit-flybuy';\n\nconst ORDER_ID = 46615889;\nconst NEW_ORDER_ID = 15942;\nconst NEW_PID = '013804';\nconst CUSTOMER_INFO = {\n  name: 'Lamia Selmane AB',\n  carType: 'Nothing',\n  carColor: 'Silver',\n  licensePlate: 'Nothing',\n  phone: '555-555-5555',\n};\nconst NOTIFICATION = {\n  title: 'Test Notification',\n  message: 'Test Notification message',\n  data: {\n    key1: 'value',\n    key2: 'value',\n  },\n};\n\nconst REGION = {\n  latitude: 47.6234207,\n  longitude: -122.3300605,\n  radius: 100,\n};\n\nexport default function App() {\n  // Orders\n  const fetchOrders = () => {\n    Flybuy.Orders.fetchOrders()\n      .then((orders) => console.tron.log('orders', orders))\n      .catch((err) => console.tron.log(err));\n  };\n\n  const createOrder = () => {\n    const pickupWindow = {\n      start: new Date().toISOString(),\n      end: new Date('2022-12-02').toISOString(),\n    };\n    Flybuy.Orders.createOrder(\n      NEW_ORDER_ID,\n      NEW_PID,\n      CUSTOMER_INFO,\n      pickupWindow,\n      'delayed',\n      'delivery'\n    )\n      .then((order) => console.tron.log('order', order))\n      .catch((err) => console.tron.log(err));\n  };\n\n  const claimOrder = () => {\n    Flybuy.Orders.claimOrder('46615889', CUSTOMER_INFO, 'pickup')\n      .then((order) => console.tron.log('claim order', order))\n      .catch((err) => console.tron.log(err));\n  };\n\n  const updateOrderState = () => {\n    Flybuy.Orders.updateOrderState(ORDER_ID, 'ready')\n      .then((order) => console.tron.log('updateOrderState', order))\n      .catch((err) => console.tron.log(err));\n  };\n\n  const updateOrderCustomerState = () => {\n    Flybuy.Orders.updateOrderCustomerState(ORDER_ID, 'departed')\n      .then((order) => console.tron.log('updateOrderCustomerState', order))\n      .catch((err) => console.tron.log(err));\n  };\n\n  const rateOrder = () => {\n    Flybuy.Orders.rateOrder(ORDER_ID, 5, 'Awesome!')\n      .then((order) => console.tron.log('rateOrder', order))\n      .catch((err) => console.tron.log(err));\n  };\n\n  // Customer\n\n  const loginWithToken = () => {\n    Flybuy.Customer.loginWithToken('F69PGKM1QXCN7Dj3ybEXCpU4')\n      .then((customer) => console.tron.log('customer', customer))\n      .catch((err) => console.tron.log(err));\n  };\n\n  const login = () => {\n    Flybuy.Customer.login('ha_zellat@esi.dz', 'password')\n      .then((customer) => console.tron.log('customer', customer))\n      .catch((err) => console.tron.log(err));\n  };\n\n  const logout = () => {\n    Flybuy.Customer.logout()\n      .then(() => console.tron.log('logout success'))\n      .catch((err) => console.tron.log(err));\n  };\n\n  const createCustomer = () => {\n    Flybuy.Customer.createCustomer(CUSTOMER_INFO)\n      .then((customer) => console.tron.log('customer', customer))\n      .catch((err) => console.tron.log(err));\n  };\n\n  const updateCustomer = () => {\n    Flybuy.Customer.updateCustomer(CUSTOMER_INFO)\n      .then((customer) => console.tron.log('customer', customer))\n      .catch((err) => console.tron.log(err));\n  };\n\n  const getCurrentCustomer = () => {\n    Flybuy.Customer.getCurrentCustomer()\n      .then((customer) => console.tron.log('customer', customer))\n      .catch((err) => console.tron.log(err));\n  };\n\n  // Notify\n\n  const clearNotifications = () => {\n    Flybuy.Notify.clearNotifications()\n      .then(() => console.tron.log('notifications cleared'))\n      .catch((err) => console.tron.log('err', err));\n  };\n\n  const createForSitesInRegion = () => {\n    Flybuy.Notify.createForSitesInRegion(REGION, NOTIFICATION)\n      .then((sites) => console.tron.log('notifications crated', sites))\n      .catch((err) => console.tron.log('err', err));\n  };\n\n  const createForSites = () => {\n    const sites: ISite[] = [\n      {\n        id: 15942,\n        name: 'Test Site',\n        phone: '333-333-3333',\n        streetAddress: null,\n        fullAddress: '500 Yale Ave N, Seattle, WA 98109, USA',\n        locality: null,\n        region: null,\n        country: null,\n        postalCode: null,\n        latitude: '47.6234207',\n        longitude: '-122.3300605',\n        coverPhotoUrl: null,\n        iconUrl: null,\n        instructions: '',\n        description: '',\n        partnerIdentifier: '001',\n      },\n    ];\n\n    Flybuy.Notify.createForSites(sites, NOTIFICATION)\n      .then(() => console.tron.log('notifications crated'))\n      .catch((err) => console.tron.log('err', err));\n  };\n\n  // Sites\n\n  const fetchAllSites = () => {\n    Flybuy.Sites.fetchAllSites()\n      .then((sites) => console.tron.log('sites', sites))\n      .catch((err) => console.tron.log('err', err));\n  };\n\n  const fetchSitesByQuery = () => {\n    Flybuy.Sites.fetchSitesByQuery({\n      query: 'Test',\n      page: 1,\n    })\n      .then((sites) => console.tron.log('sites', sites))\n      .catch((err) => console.tron.log('err', err));\n  };\n\n  const fetchSitesByRegion = () => {\n    Flybuy.Sites.fetchSitesByRegion({\n      per: 20,\n      page: 1,\n      region: REGION,\n    })\n      .then((sites) => console.tron.log('sites', sites))\n      .catch((err) => console.tron.log('err', err));\n  };\n\n  // Prescence\n\n  const startLocator = () => {\n    Flybuy.Presence.startLocatorWithIdentifier(\n      '12345678',\n      \"{'key':'value'}\"\n    ).then((res) => {\n      console.tron.log('locatorRssi-----\x3e', res);\n    });\n  };\n\n  const stopLocator = () => {\n    Flybuy.Presence.stopLocator()\n      .then((result) => {\n        console.tron.log(result);\n      })\n      .catch((e) => {\n        console.tron.log(e);\n      });\n  };\n\n  React.useEffect(() => {\n    Flybuy.configure('224.epegiXJkGRqvwLJJYHPTCWGR');\n    Flybuy.Notify.configure();\n    Flybuy.Pickup.configure();\n    Flybuy.Presence.configure('4192bff0-e1e0-43ce-a4db-912808c32493');\n  }, []);\n\n  return (\n    <ScrollView>\n      <View style={styles.container}>\n        <Text>Customer</Text>\n        <Button title=\"login\" onPress={login} />\n        <Button title=\"loginWithToken\" onPress={loginWithToken} />\n        <Button title=\"logout\" onPress={logout} />\n        <Button title=\"create Customer\" onPress={createCustomer} />\n        <Button title=\"getCurrentCustomer\" onPress={getCurrentCustomer} />\n        <Button title=\"updateCustomer\" onPress={updateCustomer} />\n        <Text>Order</Text>\n        <Button title=\"Fetch orders\" onPress={fetchOrders} />\n        <Button title=\"Create order\" onPress={createOrder} />\n        <Button title=\"claimOrder\" onPress={claimOrder} />\n        <Button title=\"updateOrderState\" onPress={updateOrderState} />\n        <Button title=\"rateOrder\" onPress={rateOrder} />\n        <Button\n          title=\"updateOrderCustomerState\"\n          onPress={updateOrderCustomerState}\n        />\n        <Text>Notify</Text>\n        <Button title=\"clearNotifications\" onPress={clearNotifications} />\n        <Button\n          title=\"createForSitesInRegion\"\n          onPress={createForSitesInRegion}\n        />\n        <Button title=\"createForSites\" onPress={createForSites} />\n        <Text>Sites</Text>\n        <Button title=\"fetchAllSites\" onPress={fetchAllSites} />\n        <Button title=\"fetchSitesByQuery\" onPress={fetchSitesByQuery} />\n        <Button title=\"fetchSitesByRegion\" onPress={fetchSitesByRegion} />\n        <Text>Presence</Text>\n        <Button title=\"start locator\" onPress={startLocator} />\n        <Button title=\"stop locator\" onPress={stopLocator} />\n      </View>\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\n")))}u.isMDXComponent=!0}}]);