(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8641],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return y}});var i=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=i.createContext({}),s=function(e){var t=i.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=s(e.components);return i.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},c=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=s(n),y=a,f=c["".concat(u,".").concat(y)]||c[y]||d[y]||o;return n?i.createElement(f,r(r({ref:t},p),{},{components:n})):i.createElement(f,r({ref:t},p))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,r=new Array(o);r[0]=c;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:a,r[1]=l;for(var s=2;s<o;s++)r[s]=n[s];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}c.displayName="MDXCreateElement"},1878:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return r},metadata:function(){return l},toc:function(){return u},default:function(){return p}});var i=n(2122),a=n(9756),o=(n(7294),n(3905)),r={sidebar_position:3},l={unversionedId:"Modules/LiveStatus",id:"Modules/LiveStatus",isDocsHomePage:!1,title:"LiveStatus",description:"The Live Status module allows you to configure and manage live status updates for your application.",source:"@site/docs/Modules/LiveStatus.md",sourceDirName:"Modules",slug:"/Modules/LiveStatus",permalink:"/react-native-bildit-flybuy/docs/Modules/LiveStatus",editUrl:"https://github.com/bildit-Platform/react-native-bildit-flybuy/edit/main/website/docs/Modules/LiveStatus.md",version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Presence",permalink:"/react-native-bildit-flybuy/docs/Modules/Presence"},next:{title:"Notify",permalink:"/react-native-bildit-flybuy/docs/Modules/Notify"}},u=[{value:"Set up and Initialize SDK",id:"set-up-and-initialize-sdk",children:[{value:"Module Installation",id:"module-installation",children:[]},{value:"Native Initialization",id:"native-initialization",children:[]},{value:"Usage",id:"usage",children:[]}]}],s={toc:u};function p(e){var t=e.components,n=(0,a.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,i.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The Live Status module allows you to configure and manage live status updates for your application."),(0,o.kt)("h2",{id:"set-up-and-initialize-sdk"},"Set up and Initialize SDK"),(0,o.kt)("p",null,"The Flybuy SDK must be initialized when the application starts in order to configure the app authorization token and handle appropriate lifecycle methods."),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Important:")," Complete all steps in the Android and iOS ",(0,o.kt)("a",{parentName:"p",href:"/react-native-bildit-flybuy/docs/Setup#installation"},"Setup guides"),"."),(0,o.kt)("h3",{id:"module-installation"},"Module Installation"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"npm install react-native-bildit-flybuy-livestatus\n\ncd ios && pod install\n")),(0,o.kt)("h3",{id:"native-initialization"},"Native Initialization"),(0,o.kt)("h4",{id:"android"},"Android"),(0,o.kt)("p",null,"Modify ",(0,o.kt)("inlineCode",{parentName:"p"},"android/app/build.gradle")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-gradle"},"  dependencies {\n      // .. other dependencies\n\n      // Add below dependencies\n      implementation platform(\"com.radiusnetworks.flybuy:bom:$flybuyVersion\")\n      implementation('com.radiusnetworks.flybuy:core')\n      implementation('com.radiusnetworks.flybuy:live-status') // add this line\n  }\n")),(0,o.kt)("p",null,"Modify ",(0,o.kt)("inlineCode",{parentName:"p"},"MainApplication.kt")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},'import com.radiusnetworks.flybuy.sdk.ConfigOptions\nimport com.radiusnetworks.flybuy.sdk.FlyBuyCore\nimport com.radiusnetworks.flybuy.sdk.livestatus.LiveStatusManager // <-- add this import\n\n\nclass MainApplication : Application(), ReactApplication {\n  override fun onCreate() {\n    super.onCreate()\n    SoLoader.init(this, false)\n    if (BuildConfig.IS_NEW_ARCHITECTURE_ENABLED) {\n      // If you opted-in for the New Architecture, we load the native entry point for this app.\n      load()\n    }\n\n    // Native configure\n    val configOptions = ConfigOptions.Builder("YourFlyBuyToken")\n      .build()\n    FlyBuyCore.configure(this, configOptions)\n\n    // Native Configuration for FlyBuy LiveStatus\n    LiveStatusManager.getInstance().configure(applicationContext)\n  }\n}\n')),(0,o.kt)("h4",{id:"ios"},"iOS"),(0,o.kt)("p",null,"Modify ",(0,o.kt)("inlineCode",{parentName:"p"},"iOS/yourproject/AppDelegate.mm")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-objc"},"\n// Add this import and make sure CoreLocation import always above FlyBuy import\n#import <CoreLocation/CoreLocation.h>\n#import <FlyBuy/FlyBuy-Swift.h>\n#import <FlyBuyLiveStatus/FlyBuyLiveStatus-Swift.h> // add this line\n\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-objc"},'\n// below FlyBuy Core configuration\n// FlyBuy LiveStatus native configuration\nFlyBuyLiveStatusOptions *options = [[[FlyBuyLiveStatusOptions.Builder init] setIconName:@"AppIcon"] build];\nif (@available(iOS 16.2, *)) {\n    [[FlyBuyLiveStatusManager shared] configureWithOptions:options];\n} else {\n    // Fallback on earlier versions\n  NSLog(@"LiveStatus is not available in this iOS version");\n}\n')),(0,o.kt)("h3",{id:"usage"},"Usage"),(0,o.kt)("p",null,"Refer to the ",(0,o.kt)("a",{parentName:"p",href:"https://www.radiusnetworks.com/developers/flybuy/#/sdk-2.0/pickup/065-live-status?id=live-status"},"Flybuy Docs")," for a complete guide on usage of the Live Status module."))}p.isMDXComponent=!0}}]);